#! /usr/bin/env bash

# I'm sure there are better ways of doing this, but I REALLY don't work with bash/zsh scripts often.
# This just seemed like a more convenient way to execute some of the common shit that I do on my PC.

BDE_VERSION="1.5"

edit_prompt() {
  case "$1" in
      "")
        $EDITOR ~/.config/scripts/bde
      ;;
      "colors")
        $EDITOR ~/.config/hypr/conf/custom/mocha.conf
      ;;
      "hypr")
        $EDITOR ~/.config/hypr/hyprland.conf
      ;;
      "keys")
        $EDITOR ~/.config/hypr/conf/keybinding.conf
      ;;
      "deco")
        $EDITOR ~/.config/hypr/conf/decoration.conf
      ;;
      "startup")
        $EDITOR ~/.config/hypr/conf/autostart.conf
      ;;
      "plugins")
        $EDITOR ~/.config/hypr/conf/custom/plugins.conf
      ;;
      "layout")
        $EDITOR ~/.config/hypr/conf/layout.conf
      ;;
      "windows")
        $EDITOR ~/.config/hypr/conf/windowrule.conf
      ;;
      "env")
        $EDITOR ~/.config/hypr/conf/custom/environment.conf
      ;;
      "rofi")
        $EDITOR ~/.config/rofi/config.rasi
      ;;
      "term")
        $EDITOR ~/.config/alacritty/alacritty.toml
      ;;
      "tmux")
        $EDITOR ~/.config/tmux/tmux.conf
      ;;
      "fish")
        $EDITOR ~/.config/fish/config.fish
      ;;
      "custom")
        $EDITOR ~/.config/hypr/conf/custom/general.conf
      ;;
      "defaults")
        $EDITOR ~/.config/mimeapps.list
      ;;
  esac
}

reload_prompt() {
	case "$1" in
      "")
        reload_hypr
        reload_hyprpanel
      ;;
      "all")
        reload_hypr
        reload_hyprpanel
      ;;
      "bar")
        reload_hyprpanel
      ;;
      "dock")
        reload_nwgdock
      ;;
      "waybar")
        reload_waybar
      ;;
      "mako")
        reload_mako
      ;;
      "hypr")
        reload_hypr
      ;;
      "sway")
        reload_swaync
      ;;
  esac
}

reload_nwgdock() {
  echo ":: Reloading nwg-dock-hyprland.."
  killall -9 nwg-dock-hyprland > /dev/null
  nwg-dock-hyprland -r -mb 15 -mt 10 -i 36 -x -nolauncher > ~/.cache/nwg-dock.log & disown
}

reload_waybar() {
  echo ":: Reloading waybar.."
  killall waybar > /dev/null
  waybar > /dev/null & disown
}

reload_mako() {
  echo ":: Reloading mako.."
  makoctl reload > /dev/null
}

reload_hypr() {
  echo ":: Reloading hyprland.."
  hyprctl reload > /dev/null
}

reload_swaync() {
  echo ":: Reloading swaync.."
  swaync-client -rs > /dev/null
}

reload_hyprpanel() {
  echo ":: Reloading HyprPanel.."
  killall -9 gjs > /dev/null
  hyprpanel > ~/hyprpanel.log 2>&1 & disown
}

init_prompt() {
	case "$1" in 
    "xdg")
      init_xdg ;;
    "wp")
      init_wp ;;
  esac
}

init_wp() {
	echo " => Initializing swww..."
	swww-daemon > /dev/null & disown
	swww-daemon --format xrgb > /dev/null & disown
}

init_xdg() {
	echo " => Initializing xdg-desktop-portal..."
	sleep 1
	killall xdg-desktop-portal-hyprland > /dev/null
	killall xdg-desktop-portal-gnome > /dev/null
	killall xdg-desktop-portal-kde > /dev/null
	killall xdg-desktop-portal-lxqt > /dev/null
	killall xdg-desktop-portal-wlr > /dev/null
	killall xdg-desktop-portal-gtk > /dev/null
	killall xdg-desktop-portal > /dev/null
	sleep 1
	/usr/lib/xdg-desktop-portal-hyprland > /dev/null &
	sleep 2
	/usr/lib/xdg-desktop-portal > /dev/null &
	sleep 1
}

file_upload() {
  curl -X POST -F "file=@$1" https://imbypass.pw/upload.php
}

file_upload_fate() {
  curl -X POST -F "file=@$1" -F "secret_key=$FATE_KEY" https://api.fate.ovh/cli/
}

search_steamapps() {
  echo -ne "\033]0;Installed Steam Games\007"
  for id in $(ls ~/.local/share/Steam/steamapps/compatdata); do echo "$id: $(curl -s "https://store.steampowered.com/app/$id/" | grep -oP '(?<=<title>)[^<]*' )"; done
}

search_fonts() {
  echo -ne "\033]0;Installed System Fonts\007"
  echo ":: Listing installed fonts.."
  fc-list |
   	    grep -ioE ": [^:]*$1[^:]+:" |
   	    sed -E 's/(^: |:)//g' |
   	    tr , \\n |
   	    sort |
   	    uniq
}

free_cache() {
  echo -ne "\033]0;Freeing cached RAM..\007"
  echo ":: Freeing cached RAM..."
  echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null
}

remove_orphans() {
  echo -ne "\033]0;Removing orphaned packages..\007"
  echo ":: Removing orphaned packages.."
  pacman -Qdtq | sudo pacman -Rns - > /dev/null
}

toggle_gamemode() {
  echo ":: Toggling game mode..."
	HYPRGAMEMODE=$(hyprctl getoption animations:enabled | awk 'NR==1{print $2}')
	if [ "$HYPRGAMEMODE" = 1 ] ; then
	    hyprctl --batch "\
	        keyword animations:enabled 0;\
	        keyword decoration:drop_shadow 0;\
	        keyword decoration:blur:enabled 0;\
	        keyword general:gaps_in 0;\
	        keyword general:gaps_out 0;\
	        keyword general:border_size 1;\
	        keyword decoration:rounding 0" > /dev/null
	    exit
	fi
	hyprctl reload > /dev/null
}

toggle_floatwindows() {
  echo ":: Toggling all floating windows..."
  hyprctl dispatch workspaceopt allfloat > /dev/null
}

display_version() {
	echo $BDE_VERSION;
}

if [[ $1 == "rl" ]];then
  reload_prompt $2

elif [[ $1 == "wp" ]];then
  hyprwall $2

elif [[ $1 == "edit" ]];then
  edit_prompt $2

elif [[ $1 == "cache" ]];then
	free_cache

elif [[ $1 == "free" ]];then
	free_cache

elif [[ $1 == "gm" ]];then
	toggle_gamemode
  
elif [[ $1 == "rm" ]];then
	remove_orphans

elif [[ $1 == "clean" ]];then
	remove_orphans

elif [[ $1 == "steam" ]];then
	search_steamapps

elif [[ $1 == "fonts" ]];then
	search_fonts

elif [[ $1 == "init" ]];then
	init_prompt $2

elif [[ $1 == "up" ]];then
	file_upload $2

elif [[ $1 == "fup" ]];then
	file_upload_fate $2

elif [[ $1 == "hf" ]];then
	toggle_floatwindows

else
  echo "Unknown argument"

fi
