#!/bin/zsh

# I'm sure there are better ways of doing this, but I REALLY don't work with bash/zsh scripts often.
# This just seemed like a more convenient way to execute some of the common shit that I do on my PC.

BDE_VERSION="1.16"
BLK="\e[1;30m"
RED="\e[1;31m"
GRN="\e[1;32m"
YLW="\e[1;33m"
BLU="\e[1;34m"
PNK="\e[1;35m"
CYN="\e[1;36m"
WHT="\e[1;37m"
BRK="\t"

ascii_logo () {
    echo $BLU"  _                              $YLW ____  _____ "
    echo $BLU" | |__  _   _ _ __   __ _ ___ ___$YLW|  _ \| ____|"
    echo $BLU" | '_ \| | | | '_ \ / _\` / __/ __$YLW| | | |  _|  "
    echo $BLU" | |_) | |_| | |_) | (_| \__ \__ \ $YLW|_| | |___ "
    echo $BLU" |_.__/ \__, | .__/ \__,_|___/___/"$YLW"____/|_____|"
    echo $BLU"        |___/|_|                              "
    echo ""
}

options_check() {
	case "$1" in
   		"--version")
	    	echo $BDE_VERSION
	    	exit
   		;;
   		"-v")
	    	echo $BDE_VERSION
	    	exit
   		;;
   		"--help")
	    	help_prompt
	    	exit
   		;;
   		"-h")
	    	help_prompt
	    	exit
   		;;
   	esac
}

help_prompt() {
  ascii_logo $1
  echo $YLW" Usage:$WHT bde [OPTIONS] COMMAND [ARGS]...\n"
  echo "   bde: the bypassDE utility toolkit\n"
  echo $YLW" Options$WHT:"
  echo "  $GRN --version$WHT$BRK Show the version and exit"
  echo "  $GRN --help$WHT$BRK Show this help prompt"
  echo $YLW"\n Commands$WHT:"
  echo "  $GRN freecache$WHT$BRK Free up cached RAM"
  echo "  $GRN fonts$WHT$BRK Display all installed fonts"
  echo "  $GRN gamemode$WHT$BRK Toggle gamemode for Hyprland"
  echo "  $GRN hyprfloat$WHT$BRK Toggle floating windows in Hyprland"
  echo "  $GRN init$WHT$BRK$BRK Initialize various bypassDE components"
  echo "  $GRN wallpaper$WHT$BRK Change the system wallpaper"
  echo "  $GRN reload$WHT$BRK Reload various bypassDE components"
  echo "  $GRN removeorphans$WHT Remove orphaned packages"
}

reload_prompt() {
	case "$1" in
   		"all")
	    	reload_waybar
	    	reload_mako
	    	reload_hypr
   		;;
   		"waybar")
	    	reload_waybar
   		;;
   		"mako")
	    	reload_mako
   		;;
   		"hypr")
	    	reload_hypr
   		;;
   		"")
        ascii_logo $1
		   	echo $WHT
		   	echo $YLW" Usage:$WHT bde reload COMMAND [ARGS]...\n"
		   	echo "  $GRN reload$CYN all$WHT - Reload the entire environment"
		   	echo "  $GRN reload$CYN waybar$WHT - Reload the waybar config"
		   	echo "  $GRN reload$CYN mako$WHT - Reload the mako daemon"
		   	echo "  $GRN reload$CYN hypr$WHT - Reload the Hyprland config"
   		;;
   	esac
}

reload_waybar() {
  echo $BLU"::$WHT Reloading waybar.."
  killall waybar > /dev/null
  waybar > /dev/null & disown
}

reload_mako() {
  echo $BLU"::$WHT Reloading mako daemon.."
  makoctl reload > /dev/null
}

reload_hypr() {
  echo $BLU"::$WHT Reloading Hyprland daemon.."
  hyprctl reload > /dev/null
}

init_prompt() {
	case "$1" in 
    "xdg")
      init_xdg ;;
    "wp")
      init_wp ;;
    "")
      ascii_logo $1
      echo $YLW" Usage:$WHT bde init COMMAND [ARGS]...\n"
      echo "  $GRN init$CYN wp$WHT - Initialize wallpaper engine"
      echo "  $GRN init$CYN xdg$WHT - Initialize xdg-desktop-portal"
      ;;
  esac
}

init_wp() {
	echo $YLW" =>$WHT Initializing swww..."
	swww-daemon > /dev/null
	swww-daemon --format xrgb > /dev/null
	sleep 0.5
	python -O ~/dotfiles/scripts/set-wallpaper.py -P > /dev/null
}

init_xdg() {
	echo $YLW" =>$WHT Initializing xdg-desktop-portal..."
	sleep 1
	killall xdg-desktop-portal-hyprland > /dev/null
	killall xdg-desktop-portal-gnome > /dev/null
	killall xdg-desktop-portal-kde > /dev/null
	killall xdg-desktop-portal-lxqt > /dev/null
	killall xdg-desktop-portal-wlr > /dev/null
	killall xdg-desktop-portal-gtk > /dev/null
	killall xdg-desktop-portal > /dev/null
	sleep 1
	/usr/lib/xdg-desktop-portal-hyprland > /dev/null &
	sleep 2
	/usr/lib/xdg-desktop-portal > /dev/null &
	sleep 1
}


set_wallpaper() {
	if [[ $1 == "" ]]; then
	    echo $RED"::$WHT No wallpaper provided. Exiting..."
	else
	    echo $BLU"::$WHT Changing wallpaper to: $1..."
	   	python -O ~/dotfiles/scripts/set-wallpaper.py -I $1 > /dev/null
	fi
}


search_fonts() {
   	echo $BLU"::$WHT Listing installed fonts.."
   	fc-list |
   	    grep -ioE ": [^:]*$1[^:]+:" |
   	    sed -E 's/(^: |:)//g' |
   	    tr , \\n |
   	    sort |
   	    uniq
}

free_cache() {
  echo $BLU"::$WHT Freeing cached RAM..."
  echo 3 | sudo tee /proc/sys/vm/drop_caches > /dev/null
}

remove_orphans() {
  echo $BLU"::$WHT Removing orphaned packages.."
  pacman -Qdtq | sudo pacman -Rns - > /dev/null
}

toggle_gamemode() {
   	echo $BLU"::$WHT Toggling game mode..."
	HYPRGAMEMODE=$(hyprctl getoption animations:enabled | awk 'NR==1{print $2}')
	if [ "$HYPRGAMEMODE" = 1 ] ; then
	    hyprctl --batch "\
	        keyword animations:enabled 0;\
	        keyword decoration:drop_shadow 0;\
	        keyword decoration:blur:enabled 0;\
	        keyword general:gaps_in 0;\
	        keyword general:gaps_out 0;\
	        keyword general:border_size 1;\
	        keyword decoration:rounding 0" > /dev/null
	    exit
	fi
	hyprctl reload > /dev/null
}

toggle_floatwindows() {
   	echo $BLU"::$WHT Toggling all floating windows..."
   	hyprctl dispatch workspaceopt allfloat > /dev/null
}


display_version() {
	echo $BDE_VERSION;
}


options_check $1
case "$1" in
    "gamemode")
    	toggle_gamemode ;;
    "game")
    	toggle_gamemode ;;
    "gm")
    	toggle_gamemode ;;
    "wallpaper")
    	set_wallpaper $2 ;;
    "wall")
    	set_wallpaper $2 ;;
    "wp")
    	set_wallpaper $2 ;;
    "fonts")
    	search_fonts ;;
    "fs")
    	search_fonts ;;
    "freecache")
      free_cache ;;
    "fc")
      free_cache ;;
    "reload")
    	reload_prompt $2 ;;
    "rl")
    	reload_prompt $2 ;;
    "removeorphans")
      remove_orphans ;;
    "remo")
      remove_orphans ;;
    "rm")
      remove_orphans ;;
    "hyprfloat")
    	toggle_floatwindows ;;
    "hypr")
    	toggle_floatwindows ;;
    "hf")
    	toggle_floatwindows ;;
    "init")
    	init_prompt $2 ;;
    "")
		echo $RED"::" $WHT"No command given. Exiting..." ;;
	*)
		echo $RED"::" $WHT"Invalid command! Use$GRN bde$YLW --help$WHT to see available commands." ;;  	
esac
